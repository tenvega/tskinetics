---
/**
 * Cart Drawer Component
 * Slide-out cart panel that shows cart contents
 * Session-based, responsive, with animations
 */

import CartItem from './CartItem.astro';
import CartSummary from './CartSummary.astro';
---

<!-- Cart Drawer Overlay -->
<div
    id="cart-overlay"
    class="fixed inset-0 bg-black bg-opacity-50 z-40 hidden opacity-0 transition-opacity duration-300"
    data-analytics-event="cart_overlay_clicked"
>
</div>

<!-- Cart Drawer -->
<div
    id="cart-drawer"
    class="fixed top-0 right-0 h-full w-full md:w-96 lg:w-[400px] bg-[#151515] border-l border-gray-800 shadow-2xl z-50 transform translate-x-full transition-transform duration-300 flex flex-col"
>
    <!-- Cart Header -->
    <div class="flex items-center justify-between p-6 border-b border-gray-800">
        <div>
            <h2 class="text-white text-2xl font-bold">Your Cart</h2>
            <p id="cart-item-count" class="text-gray-400 text-sm mt-1">
                0 items
            </p>
        </div>
        <button
            id="close-cart-button"
            class="p-2 text-gray-400 hover:text-white transition-colors rounded-lg hover:bg-gray-800"
            aria-label="Close cart"
            data-analytics-event="close_cart_clicked"
        >
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
        </button>
    </div>

    <!-- Cart Items Container (Scrollable) -->
    <div id="cart-items-container" class="flex-1 overflow-y-auto">
        <!-- Items will be dynamically inserted here -->
        <div id="cart-items-list">
            <!-- Dynamic content -->
        </div>

        <!-- Empty Cart State -->
        <div id="empty-cart-state" class="hidden flex flex-col items-center justify-center h-full p-8 text-center">
            <svg class="w-24 h-24 text-gray-600 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
            </svg>
            <h3 class="text-white text-xl font-semibold mb-2">Your cart is empty</h3>
            <p class="text-gray-400 text-sm mb-6">Add some amazing sound packs to get started!</p>
            <button
                id="empty-cart-continue-button"
                class="bg-purple-600 hover:bg-purple-700 text-white font-semibold py-3 px-6 rounded-lg transition-colors"
            >
                Browse Products
            </button>
        </div>
    </div>

    <!-- Cart Summary (Fixed at Bottom) -->
    <div id="cart-summary-container" class="hidden">
        <!-- Summary will be dynamically inserted here -->
    </div>
</div>

<script>
    import { getCart } from '../../lib/cart';
    import type { Cart } from '../../lib/cart';

    let isCartOpen = false;

    function openCart() {
        const overlay = document.getElementById('cart-overlay');
        const drawer = document.getElementById('cart-drawer');
        
        if (!overlay || !drawer) return;

        isCartOpen = true;
        document.body.style.overflow = 'hidden'; // Prevent body scroll

        // Show overlay
        overlay.classList.remove('hidden');
        setTimeout(() => {
            overlay.classList.remove('opacity-0');
            overlay.classList.add('opacity-100');
        }, 10);

        // Slide in drawer
        setTimeout(() => {
            drawer.classList.remove('translate-x-full');
            drawer.classList.add('translate-x-0');
        }, 10);

        renderCart();
    }

    function closeCart() {
        const overlay = document.getElementById('cart-overlay');
        const drawer = document.getElementById('cart-drawer');
        
        if (!overlay || !drawer) return;

        isCartOpen = false;
        document.body.style.overflow = ''; // Restore body scroll

        // Hide overlay
        overlay.classList.remove('opacity-100');
        overlay.classList.add('opacity-0');

        // Slide out drawer
        drawer.classList.remove('translate-x-0');
        drawer.classList.add('translate-x-full');

        setTimeout(() => {
            overlay.classList.add('hidden');
        }, 300);
    }

    function renderCart() {
        const cart = getCart();
        const itemsList = document.getElementById('cart-items-list');
        const emptyState = document.getElementById('empty-cart-state');
        const summaryContainer = document.getElementById('cart-summary-container');
        const itemCountText = document.getElementById('cart-item-count');

        if (!itemsList || !emptyState || !summaryContainer || !itemCountText) return;

        // Update item count
        itemCountText.textContent = `${cart.totalItems} ${cart.totalItems === 1 ? 'item' : 'items'}`;

        if (cart.items.length === 0) {
            // Show empty state
            itemsList.innerHTML = '';
            emptyState.classList.remove('hidden');
            summaryContainer.classList.add('hidden');
        } else {
            // Show cart items
            emptyState.classList.add('hidden');
            summaryContainer.classList.remove('hidden');

            // Render cart items
            itemsList.innerHTML = cart.items.map(item => `
                <div
                    class="cart-item flex items-center gap-4 p-4 border-b border-gray-700 hover:bg-gray-800/30 transition-colors"
                    data-product-id="${item.productId}"
                    data-short-code="${item.shortCode}"
                >
                    <!-- Product Thumbnail -->
                    <div class="flex-shrink-0 w-16 h-16 bg-gray-800 rounded-lg overflow-hidden">
                        ${item.thumbnailUrl ? `
                            <img
                                src="${item.thumbnailUrl}"
                                alt="${item.title}"
                                class="w-full h-full object-cover"
                                loading="lazy"
                            />
                        ` : `
                            <div class="w-full h-full flex items-center justify-center text-gray-600">
                                <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19V6l12-3v13M9 19c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zm12-3c0 1.105-1.343 2-3 2s-3-.895-3-2 1.343-2 3-2 3 .895 3 2zM9 10l12-3"></path>
                                </svg>
                            </div>
                        `}
                    </div>

                    <!-- Product Info -->
                    <div class="flex-1 min-w-0">
                        <h4 class="text-white font-semibold text-sm truncate mb-1">
                            ${item.title}
                        </h4>
                        <p class="text-gray-400 text-xs mb-2">
                            Qty: ${item.quantity}
                        </p>
                        <p class="text-purple-400 font-bold text-sm">
                            ${item.formattedPrice}
                        </p>
                    </div>

                    <!-- Remove Button -->
                    <button
                        class="remove-from-cart flex-shrink-0 p-2 text-gray-400 hover:text-red-500 transition-colors rounded-lg hover:bg-gray-700"
                        data-short-code="${item.shortCode}"
                        data-product-title="${item.title}"
                        aria-label="Remove ${item.title} from cart"
                        data-analytics-event="remove_from_cart"
                        data-analytics-product-id="${item.productId}"
                        data-analytics-product-name="${item.title}"
                    >
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                        </svg>
                    </button>
                </div>
            `).join('');

            // Render cart summary
            summaryContainer.innerHTML = `
                <div class="cart-summary bg-gray-800/50 p-6 border-t border-gray-700">
                    <!-- Subtotal -->
                    <div class="flex justify-between items-center mb-6">
                        <div>
                            <p class="text-gray-400 text-sm">Subtotal</p>
                            <p class="text-gray-500 text-xs">
                                ${cart.totalItems} ${cart.totalItems === 1 ? 'item' : 'items'}
                            </p>
                        </div>
                        <p class="text-white text-2xl font-bold">
                            ${cart.formattedTotal}
                        </p>
                    </div>

                    <!-- Checkout Button -->
                    <button
                        id="checkout-button"
                        class="w-full bg-gradient-to-r from-purple-600 to-purple-800 hover:from-purple-700 hover:to-purple-900 text-white font-bold py-4 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 hover:shadow-lg mb-3 flex items-center justify-center space-x-2"
                        data-analytics-event="checkout_clicked"
                    >
                        <span>Checkout</span>
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                        </svg>
                    </button>

                    <!-- Continue Shopping Button -->
                    <button
                        id="continue-shopping-button"
                        class="w-full bg-transparent border border-gray-600 text-gray-300 hover:text-white hover:border-white font-semibold py-3 px-6 rounded-lg transition-colors"
                        data-analytics-event="continue_shopping_clicked"
                    >
                        Continue Shopping
                    </button>

                    <!-- Trust Indicators -->
                    <div class="mt-6 pt-6 border-t border-gray-700">
                        <div class="flex justify-center items-center space-x-6 text-gray-500 text-xs">
                            <span class="flex items-center">
                                <svg class="w-3 h-3 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                Instant Download
                            </span>
                            <span class="flex items-center">
                                <svg class="w-3 h-3 mr-1 text-green-500" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                                Secure Checkout
                            </span>
                        </div>
                    </div>
                </div>
            `;

            // Re-attach event listeners for dynamically created elements
            attachCartEventListeners();
        }
    }

    function attachCartEventListeners() {
        import('../../lib/cart').then(({ removeFromCart, buildCheckoutUrl }) => {
            // Remove from cart buttons
            document.querySelectorAll('.remove-from-cart').forEach(button => {
                button.addEventListener('click', () => {
                    const shortCode = button.getAttribute('data-short-code');
                    if (shortCode) {
                        const cartItem = button.closest('.cart-item');
                        if (cartItem) {
                            cartItem.classList.add('opacity-50', 'scale-95', 'transition-all', 'duration-300');
                            setTimeout(() => {
                                removeFromCart(shortCode);
                            }, 300);
                        }
                    }
                });
            });

            // Checkout button
            const checkoutButton = document.getElementById('checkout-button');
            if (checkoutButton) {
                checkoutButton.addEventListener('click', () => {
                    const checkoutUrl = buildCheckoutUrl();
                    if (checkoutUrl) {
                        checkoutButton.innerHTML = '<span>Redirecting to Gumroad...</span>';
                        checkoutButton.classList.add('opacity-70');
                        setTimeout(() => {
                            window.open(checkoutUrl, '_blank');
                            setTimeout(() => {
                                checkoutButton.innerHTML = `
                                    <span>Checkout</span>
                                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                                    </svg>
                                `;
                                checkoutButton.classList.remove('opacity-70');
                            }, 1000);
                        }, 300);
                    }
                });
            }

            // Continue shopping button
            const continueButton = document.getElementById('continue-shopping-button');
            if (continueButton) {
                continueButton.addEventListener('click', closeCart);
            }
        });
    }

    // Initialize on page load
    document.addEventListener('DOMContentLoaded', () => {
        // Close button
        const closeButton = document.getElementById('close-cart-button');
        if (closeButton) {
            closeButton.addEventListener('click', closeCart);
        }

        // Overlay click to close
        const overlay = document.getElementById('cart-overlay');
        if (overlay) {
            overlay.addEventListener('click', closeCart);
        }

        // Empty cart continue button
        const emptyCartButton = document.getElementById('empty-cart-continue-button');
        if (emptyCartButton) {
            emptyCartButton.addEventListener('click', closeCart);
        }

        // Listen for custom events
        window.addEventListener('open-cart-drawer', openCart);
        window.addEventListener('close-cart-drawer', closeCart);
        window.addEventListener('cart-updated', () => {
            if (isCartOpen) {
                renderCart();
            }
        });

        // ESC key to close
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && isCartOpen) {
                closeCart();
            }
        });
    });

    // Re-initialize on page load
    document.addEventListener('astro:page-load', () => {
        if (isCartOpen) {
            renderCart();
        }
    });
</script>

<style>
    /* Prevent body scroll when cart is open */
    body.cart-open {
        overflow: hidden;
    }

    /* Smooth scrolling for cart items */
    #cart-items-container {
        scrollbar-width: thin;
        scrollbar-color: #6b7280 #1f2937;
    }

    #cart-items-container::-webkit-scrollbar {
        width: 6px;
    }

    #cart-items-container::-webkit-scrollbar-track {
        background: #1f2937;
    }

    #cart-items-container::-webkit-scrollbar-thumb {
        background-color: #6b7280;
        border-radius: 3px;
    }
</style>

